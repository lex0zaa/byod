openapi: 3.0.0
info:
  title: BYOD
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /me/workspace:
    get:
      summary: Your GET endpoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Workspace'
                  - $ref: '#/components/schemas/List'
      operationId: get-me-workspace
      parameters:
        - schema:
            type: integer
          in: query
          name: limit
        - schema:
            type: integer
          in: query
          name: offset
      description: list of available workspaces
      tags:
        - personal
  '/me/workspace/{workspace_id}/tools/':
    get:
      summary: Your GET endpoint
      tags:
        - personal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/ToolInstance'
                  - $ref: '#/components/schemas/List'
      operationId: 'get-me-workspace-:id-tools'
      description: list of tools available on workspace
    parameters:
      - schema:
          type: string
        name: workspace_id
        in: path
        required: true
  '/me/workspace/{workspace_id}/tools/{tool_id}':
    parameters:
      - schema:
          type: string
        name: workspace_id
        in: path
        required: true
      - schema:
          type: string
        name: tool_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - personal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolInstance'
      operationId: get-me-workspace-workspace_id-tools-tool_id
      description: Detailed information about tool instance
  '/me/workspace/{workspace_id}/tools/{tool_id}/start':
    parameters:
      - schema:
          type: string
        name: workspace_id
        in: path
        required: true
      - schema:
          type: string
        name: tool_id
        in: path
        required: true
    post:
      summary: ''
      operationId: post-me-workspace-workspace_id-tools-tool_id-start
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolInstance'
      description: start tool
      tags:
        - personal
  '/me/workspace/{workspace_id}/tools/{tool_id}/stop':
    parameters:
      - schema:
          type: string
        name: workspace_id
        in: path
        required: true
      - schema:
          type: string
        name: tool_id
        in: path
        required: true
    post:
      summary: ''
      operationId: post-me-workspace-workspace_id-tools-tool_id-stop
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolInstance'
      tags:
        - personal
  /user:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/List'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
      operationId: get-user
      description: list of users
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      x-examples:
        Alice Smith:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
      required:
        - id
        - firstName
        - lastName
    Workspace:
      title: Workspace
      type: object
      properties:
        id:
          type: string
    Tool:
      title: Tool
      type: object
      properties:
        id:
          type: string
    Request:
      title: Request
      type: object
      properties:
        id:
          type: string
    List:
      title: List
      type: object
      properties:
        limit:
          type: number
        total:
          type: number
        offset:
          type: number
    ToolInstance:
      title: ToolInstance
      allOf:
        - type: object
          properties:
            instance:
              type: object
              properties:
                id:
                  type: string
                status:
                  type: string
                  enum:
                    - stopped
                    - ready
                    - inProgress
        - $ref: '#/components/schemas/Tool'
  responses: {}
