openapi: 3.0.0
tags:
  - name: v1
    description: v1
  - name: v2
    description: v2
  - name: v3
    description: v3
  - name: personal
    description: user related endpoints
  - name: admin
    description: admin related endpoints
  - name: common
    description: 'common endpoints, dictionaries etc'
  - name: optional
    description: endpoint which is not nesserary end were added for consistensy
info:
  description: API
  title: BYOD
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /me/workspace:
    get:
      summary: Your GET endpoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Workspace'
                  - $ref: '#/components/schemas/List'
      operationId: get-me-workspace
      parameters:
        - schema:
            type: integer
          in: query
          name: limit
          required: true
        - schema:
            type: integer
          in: query
          name: offset
          required: true
        - schema:
            type: string
          in: query
          name: search
          description: 'Search string, search by name'
      description: list of available workspaces
      tags:
        - personal
        - v1
  '/me/workspace/{workspace_id}/tools':
    get:
      summary: Your GET endpoint
      tags:
        - personal
        - v1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/ToolInstance'
                  - $ref: '#/components/schemas/List'
              examples:
                example-1:
                  value:
                    items:
                      - instance:
                          id: string
                          status: starting
                          url: string
                        id: string
                        name: string
                        description: string
                        url: string
                        type: openrefine
                        logoUrl: string
                    limit: 0
                    total: 0
                    offset: 0
      operationId: 'get-me-workspace-:id-tools'
      description: list of tools available on workspace
      parameters:
        - schema:
            type: number
          in: query
          name: limit
          required: true
        - schema:
            type: number
          in: query
          name: offset
          required: true
    parameters:
      - schema:
          type: string
        name: workspace_id
        in: path
        required: true
  '/me/workspace/{workspace_id}/tools/{tool_id}':
    parameters:
      - schema:
          type: string
        name: workspace_id
        in: path
        required: true
      - schema:
          type: string
        name: tool_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - optional
        - personal
        - v1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolInstance'
      operationId: get-me-workspace-workspace_id-tools-tool_id
      description: Detailed information about tool instance
  '/me/workspace/{workspace_id}/tools/{tool_id}/start':
    parameters:
      - schema:
          type: string
        name: workspace_id
        in: path
        required: true
      - schema:
          type: string
        name: tool_id
        in: path
        required: true
    post:
      summary: ''
      operationId: post-me-workspace-workspace_id-tools-tool_id-start
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolInstance'
      description: start tool
      tags:
        - personal
        - v1
  '/me/workspace/{workspace_id}/tools/{tool_id}/stop':
    parameters:
      - schema:
          type: string
        name: workspace_id
        in: path
        required: true
      - schema:
          type: string
        name: tool_id
        in: path
        required: true
    post:
      summary: ''
      operationId: post-me-workspace-workspace_id-tools-tool_id-stop
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolInstance'
      tags:
        - personal
        - v1
      description: stop tool
  /user:
    get:
      summary: Your GET endpoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/List'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
      operationId: get-user
      description: list of users
      tags:
        - common
        - v3
  /workspace-template:
    get:
      summary: Your GET endpoint
      tags:
        - admin
        - v3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      items:
                        $ref: '#/components/schemas/WorkspaceTemplate'
                  - $ref: '#/components/schemas/List'
      operationId: get-workspace-template
      description: |
        list of workspace templates
    post:
      summary: ''
      operationId: post-workspace-template
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceTemplate'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceTemplate'
        description: ''
      description: Create workspace template
      tags:
        - admin
  '/workspace-template/{workspace_teamplte_id}':
    parameters:
      - schema:
          type: string
        name: workspace_teamplte_id
        in: path
        required: true
    delete:
      summary: ''
      operationId: delete-workspace-template-workspace_teamplte_id
      responses:
        '200':
          description: OK
      tags:
        - admin
        - optional
        - v3
      description: delete info about workspace template
    get:
      summary: ''
      operationId: get-workspace-template-workspace_teamplte_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceTemplate'
      tags:
        - admin
        - optional
        - v3
      description: get full info about workspace template
  '/workspace-template/{workspace_template}/workspace':
    parameters:
      - schema:
          type: string
        name: workspace_template
        in: path
        required: true
    post:
      summary: ''
      operationId: post-workspace-template-workspace_template-workspace
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
      description: create workspace from template
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      tags:
        - admin
        - v3
  /workspace:
    get:
      summary: Your GET endpoint
      tags:
        - admin
        - v3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Workspace'
                  - $ref: '#/components/schemas/List'
      operationId: get-workspace
      description: list of all system Workspaces
  '/workspace/{workspace_id}':
    parameters:
      - schema:
          type: string
        name: workspace_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - admin
        - optional
        - v3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
      operationId: get-workspace-workspace_id
      description: Full info about workspace
    put:
      summary: ''
      operationId: put-workspace-workspace_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
      description: Change workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
        description: ''
      tags:
        - admin
        - v3
  /role:
    get:
      summary: Your GET endpoint
      tags:
        - admin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      items:
                        $ref: '#/components/schemas/Role'
                  - $ref: '#/components/schemas/List'
      operationId: get-role
      description: get role list
      parameters:
        - schema:
            type: integer
          in: query
          name: limit
        - schema:
            type: integer
          in: query
          name: offset
    post:
      summary: ''
      operationId: post-role
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      description: create new role
      tags:
        - admin
        - optional
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        description: All fields for role except id
  '/role/{role_id}':
    parameters:
      - schema:
          type: string
        name: role_id
        in: path
        required: true
    put:
      summary: ''
      operationId: put-role-role_id
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      description: Change Role
      tags:
        - admin
        - optional
        - v3
  /me/resolve-permissions:
    get:
      summary: Your GET endpoint
      tags:
        - personal
        - v2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Permission'
                  - $ref: '#/components/schemas/List'
      operationId: get-resolve-permissions
      description: actual permissions for user
    parameters: []
  /permissions:
    get:
      summary: Your GET endpoint
      tags:
        - admin
        - optional
        - v3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Permission'
                  - $ref: '#/components/schemas/List'
      operationId: get-permissions
      description: Get list of permissions
    post:
      summary: ''
      operationId: post-permissions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
      description: create new system permission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
      tags:
        - admin
        - optional
  '/me/workspace/{workspace_id}':
    parameters:
      - schema:
          type: string
        name: workspace_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - optional
        - personal
        - v1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
      operationId: get-me-workspace-workspace_id
      description: Get info about workspace
  '/me/workspace/{workspace_id}/artifacts':
    parameters:
      - schema:
          type: string
        name: workspace_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - personal
        - v2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Artifact'
                  - $ref: '#/components/schemas/List'
      operationId: get-me-workspace-workspace_id-artifacts
      description: List of artifacts
  '/workspace/{workspace_id}/user':
    parameters:
      - schema:
          type: string
        name: workspace_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - admin
        - v3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      items:
                        $ref: '#/components/schemas/User'
                  - $ref: '#/components/schemas/List'
      operationId: get-workspace-workspace_id-user
      description: get user list of workspace
    post:
      summary: ''
      operationId: post-workspace-workspace_id-user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
      description: Add user to workspace
      tags:
        - admin
  '/workspace/{workspace_id}/user/{user_id}':
    parameters:
      - schema:
          type: string
        name: workspace_id
        in: path
        required: true
      - schema:
          type: string
        name: user_id
        in: path
        required: true
    delete:
      summary: ''
      operationId: delete-workspace-workspace_id-user-user_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
      description: Delete user from workspace
      tags:
        - admin
        - v3
  '/me/workspace/{workspace_id}/user':
    parameters:
      - schema:
          type: string
        name: workspace_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - personal
        - v2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
                  - $ref: '#/components/schemas/List'
      operationId: get-me-workspace-workspace_id-user
      description: user list of workspace
    post:
      summary: ''
      operationId: post-me-workspace-workspace_id-user
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
      tags:
        - personal
        - v2
      description: Add user to workspace
  '/me/workspace/{workspace_id}/user/{user_id}':
    parameters:
      - schema:
          type: string
        name: workspace_id
        in: path
        required: true
      - schema:
          type: string
        name: user_id
        in: path
        required: true
    delete:
      summary: ''
      operationId: delete-me-workspace-workspace_id-user-user_id
      responses:
        '200':
          description: OK
      tags:
        - personal
        - v2
      description: Delete user from workspace
  '/me/workspace/{workspace_id}/request':
    parameters:
      - schema:
          type: string
        name: workspace_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - personal
        - v2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: ''
                  - $ref: '#/components/schemas/List'
      operationId: get-me-workspace-workspace_id-request
      description: Return list of reuqest
    post:
      summary: ''
      operationId: post-me-workspace-workspace_id-request
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
      description: Create request
      tags:
        - personal
  '/me/workspace/{workspace_id}/request/{request_id}/approve':
    parameters:
      - schema:
          type: string
        name: workspace_id
        in: path
        required: true
      - schema:
          type: string
        name: request_id
        in: path
        required: true
    post:
      description: approve the request
      summary: ''
      operationId: post-me-workspace-workspace_id-request-request_id-approve
      responses:
        '200':
          description: OK
      tags:
        - personal
        - v2
  '/me/workspace/{workspace_id}/request/{request_id}/decline':
    parameters:
      - schema:
          type: string
        name: workspace_id
        in: path
        required: true
      - schema:
          type: string
        name: request_id
        in: path
        required: true
    post:
      summary: ''
      operationId: post-me-workspace-workspace_id-request-request_id-decline
      responses:
        '200':
          description: OK
      tags:
        - personal
        - v2
      description: Decline the request
  /me/profile:
    get:
      summary: Your GET endpoint
      tags:
        - personal
        - v1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      operationId: get-me-profile
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      x-examples:
        Alice Smith:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
      required:
        - id
        - firstName
        - lastName
        - email
    Workspace:
      title: Workspace
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        updated:
          type: string
          format: date
        owners:
          type: array
          items:
            $ref: '#/components/schemas/User'
        description:
          type: string
        isFavorite:
          type: boolean
      required:
        - id
        - name
        - updated
        - owners
        - description
        - isFavorite
    Tool:
      title: Tool
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        url:
          type: string
        type:
          type: string
          enum:
            - openrefine
      required:
        - id
        - name
        - description
        - url
        - type
    Request:
      title: Request
      type: object
      properties:
        id:
          type: string
      required:
        - id
    List:
      title: List
      type: object
      properties:
        limit:
          type: number
        total:
          type: number
        offset:
          type: number
      required:
        - limit
        - total
        - offset
    ToolInstance:
      title: ToolInstance
      allOf:
        - type: object
          properties:
            instance:
              type: object
              required:
                - id
                - status
                - url
              properties:
                id:
                  type: string
                status:
                  type: string
                  enum:
                    - running
                    - starting
                    - error
                url:
                  type: string
        - $ref: '#/components/schemas/Tool'
    WorkspaceRequest:
      title: WorkspaceRequest
      type: object
      properties:
        id:
          type: string
        status:
          type: string
          enum:
            - pending
            - approved
            - declined
        user:
          $ref: '#/components/schemas/User'
        workspace:
          $ref: '#/components/schemas/Workspace'
      required:
        - id
        - status
        - user
        - workspace
    WorkspaceTemplate:
      title: WorkspaceTemplate
      type: object
      properties:
        id:
          type: string
        tools:
          type: array
          items:
            $ref: '#/components/schemas/Tool'
      required:
        - id
        - tools
    Role:
      title: Role
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
      required:
        - id
        - name
        - description
        - permissions
    Permission:
      title: Permission
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
      required:
        - id
        - name
        - description
    WorkspaceInstance:
      title: WorkspaceInstance
      type: object
      properties:
        id:
          type: string
        workspace:
          $ref: '#/components/schemas/Workspace'
        isFavorite:
          type: boolean
      required:
        - id
        - workspace
        - isFavorite
    Artifact:
      title: Artifact
      type: object
      properties:
        id:
          type: string
        url:
          type: string
          format: url
        name:
          type: string
        size:
          type: string
        date:
          type: string
          format: date-time
      required:
        - id
        - url
        - name
        - size
        - date
    SuccessResponse:
      title: SuccessResponse
      type: object
      properties:
        success:
          type: boolean
      required:
        - success
  responses: {}
